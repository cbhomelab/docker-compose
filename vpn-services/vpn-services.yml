# This file is auto-generated by openmediavault (https://www.openmediavault.org)
# WARNING: Do not edit this file, your changes will get lost.

# vpn-services
# Services that live on VPN network
# This file is auto-generated by openmediavault (https://www.openmediavault.org)
# WARNING: Do not edit this file, your changes will get lost.

# vpn-services
# Services that live on VPN network
---
networks:
  priv_bridge:
    name: priv_bridge
    driver: ipvlan
    driver_opts:
      parent: enp4s0.8
    ipam:
      config:
        - subnet: "10.80.0.0/24"
          gateway: "10.80.0.1"
  docker:
    name: docker
    external: true
services:
  nextpvr:
    image: nextpvr/nextpvr_amd64:stable
    container_name: nextpvr
    networks:
      priv_bridge:
        ipv4_address: ${nextpvrip}
      docker:
    environment:
      - PUID=${dockeruid}
      - PGID=${dockergid}
      - TZ=${timezone}
    volumes:
      - ${appdata}/nextpvr:/config:rw
      - ${media}/dvr:/recordings:rw #optional
      - ${ram}/nextpvr:/buffer:rw #optional
      - ${intel}:rw
    restart: unless-stopped
    deploy:
      resources:
          limits:
              pids: 2048
              memory: 16G
    logging:
        options:
            max-size: 50m
    devices:
      - ${intel}
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    networks:
      priv_bridge:
        ipv4_address: ${bazarrip}
      docker:
    environment:
      - PUID=${dockeruid}
      - PGID=${dockergid}
      - TZ=${timezone}
    volumes:
      - ${appdata}/bazarr:/config:rw
      - ${media}/tv:/tv:rw
      - ${media}/movies:/movies:rw
    ports:
      - 6767:6767
    restart: unless-stopped
  flaresolverr:
    image: binhex/arch-flaresolverr
    container_name: flaresolverr
    restart: unless-stopped
    networks:
      priv_bridge:
        ipv4_address: ${flaresolverrip}
      docker:
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${appdata}/flaresolverr:/config:rw
    environment:
      - PUID=${dockeruid}
      - PGID=${dockergid}
      - TZ=${timezone}
    deploy:
      resources:
          limits:
              pids: 2048
              memory: 1G
    logging:
        options:
            max-size: 50m
  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=${dockeruid}
      - PGID=${dockergid}
      - TZ=${timezone}
    networks:
      priv_bridge:
        ipv4_address: ${lidarrip}
      docker:
    volumes:
      - ${appdata}/lidarr:/config:rw
      - ${scripts}/lidarr-extended/custom-cont-init.d:/custom-cont-init.d:rw
      - ${scripts}/lidarr-extended/custom-services.d:/custom-services.d:rw
      - ${media}/music:/music:rw #optional
      - ${media}/downloads:/downloads:rw #optional
      - ${media}/seeds:/seeds:rw #optional
    restart: unless-stopped
    deploy:
      resources:
          limits:
              pids: 2048
              memory: 2G
    logging:
        options:
            max-size: 50m
  lidarr-hunter:
    container_name: lidarr-hunter
    image: admin9705/lidarr-hunter
    restart: unless-stopped
    networks:
      docker:
    environment:
      - PUID=${dockeruid}
      - PGID=${dockergid}
      - TZ=${timezone}
      - API_KEY=${lidarrapi}
      - API_URL=${lidarrurl}
      - MAX_ITEMS=1
      - SLEEP_DURATION=900
      - RANDOM_SELECTION=true
      - MONITORED_ONLY=true
      - SEARCH_MODE=artist
    deploy:
      resources:
          limits:
              pids: 2048
              memory: 2G
    logging:
        options:
            max-size: 50m
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    networks:
      priv_bridge:
        ipv4_address: ${prowlarrip}
      docker:
    environment:
      - PUID=${dockeruid}
      - PGID=${dockergid}
      - TZ=${timezone}
    volumes:
      - ${appdata}/prowlarr:/config:rw
    restart: unless-stopped
    deploy:
        resources:
          limits:
              pids: 2048
              memory: 2G
    logging:
        options:
            max-size: 50m
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    networks:
      priv_bridge:
        ipv4_address: ${radarrip}
      docker:
    environment:
      - PUID=${dockeruid}
      - PGID=${dockergid}
      - TZ=${timezone}
    volumes:
      - ${appdata}/radarr:/config:rw
      - ${media}/movies:/movies:rw #optional
      - ${downloads}:/downloads:rw #optional
      - ${media}/seeds:/seeds:rw #optional
    restart: unless-stopped
    deploy:
      resources:
          limits:
              pids: 2048
              memory: 2G
    logging:
        options:
            max-size: 50m
  huntarr-radarr:
    image: huntarr/4radarr:latest
    container_name: huntarr-radarr
    restart: unless-stopped
    networks:
      docker:
    environment:
      - PUID=${dockeruid}
      - PGID=${dockergid}
      - TZ=${timezone}
      - API_KEY=${radarrapi}
      - API_URL=${radarrurl}
      - MONITORED_ONLY=true
      - SEARCH_TYPE=both
      - MAX_MISSING=1
      - MAX_UPGRADES=5
      - SLEEP_DURATION=900
      - RANDOM_SELECTION=true
      - STATE_RESET_INTERVAL_HOURS=168
      - DEBUG_MODE=false
    deploy:
      resources:
          limits:
              pids: 2048
              memory: 2G
    logging:
        options:
            max-size: 50m
  readarr-audio:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr-audio
    networks:
      priv_bridge:
        ipv4_address: ${readarraudioip}
      docker:
    environment:
      - PUID=${dockeruid}
      - PGID=${dockergid}
      - TZ=${timezone}
    volumes:
      - ${appdata}/readarr-audiobooks:/config:rw
      - ${media}/audiobooks:/audiobooks:rw #optional
      - ${downloads}:/downloads:rw #optional
      - ${media}/seeds:/seeds:rw #optional
    restart: unless-stopped
    deploy:
        resources:
            limits:
              pids: 2048
              memory: 2G
    logging:
        options:
            max-size: 50m
  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PUID=${dockeruid}
      - PGID=${dockergid}
      - TZ=${timezone}
    networks:
      priv_bridge:
        ipv4_address: ${readarrip}
      docker:
    volumes:
      - ${appdata}/readarr-ebooks:/config:rw
      - ${media}/ebooks:/ebooks:rw #optional
      - ${downloads}s:/downloads:rw #optional
      - ${media}/seeds:/seeds:rw #optional
    restart: unless-stopped
    deploy:
        resources:
          limits:
              pids: 2048
              memory: 2G
    logging:
        options:
            max-size: 50m
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    networks:
      priv_bridge:
        ipv4_address: ${sonarrip}
      docker:
    container_name: sonarr
    environment:
      - PUID=${dockeruid}
      - PGID=${dockergid}
      - TZ=${timezone}
    volumes:
      - ${appdata}/sonarr:/config:rw
      - ${media}/tv:/tv:rw #optional
      - ${downloads}:/downloads:rw #optional
      - ${media}/seeds:/seeds:rw #optional
    restart: unless-stopped
    deploy:
      resources:
          limits:
              pids: 2048
              memory: 2G
    logging:
        options:
            max-size: 50m
  huntarr-sonarr:
    image: huntarr/4sonarr:latest
    container_name: huntarr-sonarr
    restart: unless-stopped
    networks:
      docker:
    environment:
      - API_KEY=${sonarrapi}
      - API_URL=${sonarrurl}
      - MONITORED_ONLY=true
      - SEARCH_TYPE=both
      - MAX_MISSING=1
      - MAX_UPGRADES=5
      - SLEEP_DURATION=900
      - RANDOM_SELECTION=true
      - STATE_RESET_INTERVAL_HOURS=168
      - DEBUG_MODE=false
    deploy:
      resources:
          limits:
              pids: 2048
              memory: 2G
    logging:
        options:
            max-size: 50m
  whisparr:
    image: ghcr.io/hotio/whisparr:latest
    container_name: whisparr
    networks:
      priv_bridge:
        ipv4_address: ${whisparrip}
      docker:
    environment:
      - PUID=${dockeruid}
      - PGID=${dockergid}
      - TZ=${timezone}
    volumes:
      - ${appdata}/whisparr:/config:rw
      - ${media}/deprecated/lib/whisparr:/data:rw #optional
      - ${downloads}:/downloads:rw #optional
      - ${media}/seeds:/seeds:rw #optional
    restart: unless-stopped
    deploy:
      resources:
          limits:
              pids: 2048
              memory: 2G
    logging:
        options:
            max-size: 50m
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    networks:
      priv_bridge:
        ipv4_address: ${qbittorrentip}
      docker:
    environment:
      - PUID=${dockeruid}
      - PGID=${dockergid}
      - TZ=${timezone}
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
    volumes:
      - ${appdata}/qbittorrent:/config:rw
      - ${downloads}:/downloads:rw #optional
      - ${media}/seeds:/seeds:rw #optional
      - ${scripts}/nzbtomedia:/scripts:rw
    restart: unless-stopped
    deploy:
      resources:
          limits:
              pids: 2048
              memory: 8G
    logging:
        options:
            max-size: 50m
  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    networks:
      priv_bridge:
        ipv4_address: ${sabnzbdip}
      docker:
    environment:
      - PUID=${dockeruid}
      - PGID=${dockergid}
      - TZ=${timezone}
    volumes:
      - ${appdata}/sabnzbd:/config:rw
      - ${downloads}:/downloads:rw #optional
    restart: unless-stopped
    deploy:
      resources:
          limits:
              pids: 2048
              memory: 8G
    logging:
        options:
            max-size: 50m
  ytdl-sub:
    image: ghcr.io/jmbannon/ytdl-sub:latest
    container_name: ytdl-sub
    restart: unless-stopped
    networks:
      priv_bridge:
        ipv4_address: ${ytdlsubip}
      docker:
    volumes:
      - ${appdata}/ytdl-sub:/config:rw
      - ${media}/youtube:/youtube:rw
      - ${intel}:rw
    environment:
      - CRON_SCHEDULE="0 */6 * * *"
      - CRON_RUN_ON_START=false
      - PUID=${dockeruid}
      - PGID=${dockergid}
      - TZ=${timezone}
    deploy:
      resources:
          limits:
              pids: 2048
              memory: 2G
    logging:
        options:
            max-size: 50m
    devices:
      - ${intel}
  stash:
    image: ghcr.io/feederbox826/stash-s6:hwaccel
    container_name: stash
    networks:
      priv_bridge:
        ipv4_address: ${staship}
      docker:
    environment:
      - PUID=${dockeruid}
      - PGID=${dockergid}
      - TZ=${timezone}
      - STASH_STASH=/data/
      - MIGRATE=FALSE
    volumes:
      - ${stashcache}:/config:rw
      - ${stashcache}/pip-install:/pip-install:rw
      - ${media}/deprecated/lib:/data:rw
      - ${intel}:rw
    restart: unless-stopped
    deploy:
      resources:
          limits:
              pids: 2048
              memory: 16G
    logging:
        options:
            max-size: 50m
    devices:
      - ${intel}

